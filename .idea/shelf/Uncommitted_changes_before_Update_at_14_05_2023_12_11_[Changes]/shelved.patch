Index: src/main/kotlin/LinkedList.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*import java.lang.IndexOutOfBoundsException\r\n\r\nfun main() {\r\n\r\n}\r\n\r\ndata class LinkedList2(var head: Node? = null) {\r\n    //Element am Anfang einfügen\r\n    fun prepend(value: Int) {\r\n        head = Node(value, head)\r\n    }\r\n\r\n    //Wert hinten anfügen\r\n    tailrec fun add(value: Int, curNode: Node? = head) {\r\n        if (curNode == null) {\r\n            prepend(value)\r\n        } else if (curNode.nextNode == null) {\r\n            curNode.nextNode = Node(value)\r\n        } else {\r\n            add(value, curNode.nextNode)\r\n        }\r\n    }\r\n\r\n    //Gibt den Wert an Position index zurück\r\n    fun get(index: Int): Int {\r\n        var curIndex = 0\r\n        var curNode = head ?: throw IndexOutOfBoundsException(\"Liste ist leer\")\r\n        while (curIndex != index) {\r\n            curNode = curNode.nextNode ?: throw IndexOutOfBoundsException(\"Index nicht in Liste\")\r\n            curIndex++\r\n        }\r\n        return curNode.value\r\n    }\r\n\r\n    fun isEmpty(): Boolean {\r\n        return head == null\r\n    }\r\n\r\n    //Prüft ob Wert in Liste enthalten ist\r\n    fun contains(value: Int): Boolean {\r\n        var curNode = head\r\n        while (curNode != null) {\r\n            if (curNode.value == value) {\r\n                return true\r\n            }\r\n            curNode = curNode.nextNode\r\n        }\r\n        return false\r\n    }\r\n\r\n    fun size(): Int {\r\n        var curNode = head\r\n        var size = 0\r\n        while (curNode != null) {\r\n            size++\r\n            curNode = curNode.nextNode\r\n        }\r\n        return size\r\n    }\r\n\r\n    tailrec fun indexOf(x: Int, curNode: Node? = head, accum: Int = 0): Int {\r\n        if (curNode == null) {\r\n            return -1\r\n        } else if (curNode.value == x) {\r\n            return accum\r\n        } else {\r\n            return indexOf(x, curNode.nextNode, accum + 1)\r\n        }\r\n    }\r\n\r\n    fun remove(i: Int, curNode: Node? = head, beforeNode: Node? = null, accum: Int = 0) {\r\n        if (curNode == null || i >= size()) {\r\n            throw IndexOutOfBoundsException(\"Leere Liste oder Index nicht in Liste\")\r\n        } else if (i == accum) {\r\n            if (beforeNode == null) {\r\n                head = curNode.nextNode\r\n            } else {\r\n                beforeNode.nextNode = curNode.nextNode\r\n            }\r\n        } else {\r\n            remove(i, curNode.nextNode, curNode, accum + 1)\r\n        }\r\n    }\r\n}\r\n\r\ndata class Node2(val value: Int, var nextNode: Node? = null)\r\n\r\n*/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/LinkedList.kt b/src/main/kotlin/LinkedList.kt
--- a/src/main/kotlin/LinkedList.kt	(revision ed649c91d145b42f77c5efa25aac8c7e5c3357de)
+++ b/src/main/kotlin/LinkedList.kt	(date 1684058082794)
@@ -1,4 +1,4 @@
-/*import java.lang.IndexOutOfBoundsException
+import java.lang.IndexOutOfBoundsException
 
 fun main() {
 
@@ -83,6 +83,7 @@
     }
 }
 
-data class Node2(val value: Int, var nextNode: Node? = null)
+data class Node(val value: Int, var nextNode: Node? = null){
+
+}
 
-*/
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6b58b9a3-7cf5-4962-a59d-87aa8d451d97\" name=\"Changes\" comment=\"asd\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/kotlin/BInarySearchTree.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/kotlin/DataClassOrt.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/kotlin/LinkedList.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/kotlin/LinkedList3.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/kotlin/LinkedList_Example_One.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/kotlin/Queue.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/kotlin/SortedLinkList.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/kotlin/Stack.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/kotlin/TeileListe.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/kotlin/Exam2023_JoeyKtTest.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/kotlin/ExpressionTest.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/kotlin/HomeworkOneKtTest.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/kotlin/Homework_foreKtTest.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/kotlin/LinkedList2Test.kt\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/kotlin/LinkedListExampleOneTest.kt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/kotlin/DataClass.kt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/kotlin/DataClass.kt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Class\" />\r\n        <option value=\"Kotlin File\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2Pgb5qzihEoC9b81nNXocnG2bDX\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Programmieren\\Semester 1\\KotlinCode\\Vorbereitung Nachschreibeklausur\\Pruefungsvorbereitung2\\src\\test\\kotlin\" />\r\n      <recent name=\"D:\\Programmieren\\Semester 1\\KotlinCode\\Vorbereitung Nachschreibeklausur\\Pruefungsvorbereitung2\\src\\main\\kotlin\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6b58b9a3-7cf5-4962-a59d-87aa8d451d97\" name=\"Changes\" comment=\"\" />\r\n      <created>1683881494251</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1683881494251</updated>\r\n      <workItem from=\"1683881495992\" duration=\"272000\" />\r\n      <workItem from=\"1683881781447\" duration=\"292000\" />\r\n      <workItem from=\"1683965733271\" duration=\"9668000\" />\r\n      <workItem from=\"1684053766304\" duration=\"143000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"asd\">\r\n      <created>1683881516854</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683881516854</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"asd\">\r\n      <created>1683881613639</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683881613639</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"asd\">\r\n      <created>1683976134757</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1683976134757</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"asd\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"asd\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ed649c91d145b42f77c5efa25aac8c7e5c3357de)
+++ b/.idea/workspace.xml	(date 1684058926780)
@@ -4,24 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6b58b9a3-7cf5-4962-a59d-87aa8d451d97" name="Changes" comment="asd">
-      <change afterPath="$PROJECT_DIR$/src/main/kotlin/BInarySearchTree.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/kotlin/DataClassOrt.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/kotlin/LinkedList.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/kotlin/LinkedList3.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/kotlin/LinkedList_Example_One.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/kotlin/Queue.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/kotlin/SortedLinkList.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/kotlin/Stack.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/kotlin/TeileListe.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/test/kotlin/Exam2023_JoeyKtTest.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/test/kotlin/ExpressionTest.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/test/kotlin/HomeworkOneKtTest.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/test/kotlin/Homework_foreKtTest.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/test/kotlin/LinkedList2Test.kt" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/test/kotlin/LinkedListExampleOneTest.kt" afterDir="false" />
+    <list default="true" id="6b58b9a3-7cf5-4962-a59d-87aa8d451d97" name="Changes" comment="update">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/kotlin/DataClass.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/DataClass.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/kotlin/Example_LinkedList.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/Example_LinkedList.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/kotlin/LinkedList.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/LinkedList.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/kotlin/LinkedList3.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/LinkedList3.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/kotlin/Queue.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/Queue.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/kotlin/Stack.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/Stack.kt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -90,7 +79,7 @@
       <workItem from="1683881495992" duration="272000" />
       <workItem from="1683881781447" duration="292000" />
       <workItem from="1683965733271" duration="9668000" />
-      <workItem from="1684053766304" duration="143000" />
+      <workItem from="1684053766304" duration="4588000" />
     </task>
     <task id="LOCAL-00001" summary="asd">
       <created>1683881516854</created>
@@ -113,7 +102,14 @@
       <option name="project" value="LOCAL" />
       <updated>1683976134757</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="update">
+      <created>1684053977895</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1684053977895</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -121,6 +117,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="asd" />
-    <option name="LAST_COMMIT_MESSAGE" value="asd" />
+    <MESSAGE value="update" />
+    <option name="LAST_COMMIT_MESSAGE" value="update" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/kotlin/Queue.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\nfun main() {\r\n\r\n}\r\n\r\ndata class Queue(val list: LinkedList<Int> = LinkedList()) {\r\n    //Elemente am Ende der Liste anfügen\r\n    fun enqueue(value: Int) {\r\n        list.append(value)\r\n    }\r\n\r\n    //Zeigt erstes Element der Warteschlange\r\n    fun front(): Int {\r\n        if (list.isEmpty()) {\r\n            throw NoSuchElementException(\"Queue ist leer\")\r\n        }\r\n        return list.get(0)\r\n    }\r\n\r\n    //Entfernt erstes Element der Warteschlange\r\n    fun dequeue(): Int {\r\n        if (list.isEmpty()) {\r\n            throw NoSuchElementException(\"Queue ist leer\")\r\n        }\r\n        return list.removeFirst()\r\n    }\r\n\r\n    fun dequeue2(): Int {\r\n        if (list.isEmpty()) {\r\n            throw NoSuchElementException(\"Queue ist leer\")\r\n        }\r\n        return list.remove(0)\r\n    }\r\n\r\n    fun reverseQueue(): Queue {\r\n        val newQueue = Queue()\r\n        while (!list.isEmpty()) {\r\n            newQueue.enqueue(list.removeFirst())\r\n        }\r\n        return newQueue\r\n    }\r\n\r\n    fun isQueueEquals(queue: Queue): Boolean {\r\n        if (list.size() != queue.list.size()) {\r\n            return false\r\n        }\r\n        val tempList = LinkedList(list)\r\n        val tempQueueList = LinkedList(queue.list)\r\n        while (!tempList.isEmpty()) {\r\n            if (tempList.removeFirst() != tempQueueList.removeFirst()) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n}\r\n*/\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/Queue.kt b/src/main/kotlin/Queue.kt
--- a/src/main/kotlin/Queue.kt	(revision ed649c91d145b42f77c5efa25aac8c7e5c3357de)
+++ b/src/main/kotlin/Queue.kt	(date 1684058082781)
@@ -1,8 +1,6 @@
-/*
 fun main() {
 
 }
-
 data class Queue(val list: LinkedList<Int> = LinkedList()) {
     //Elemente am Ende der Liste anfügen
     fun enqueue(value: Int) {
@@ -54,4 +52,4 @@
         return true
     }
 }
-*/
+
Index: src/main/kotlin/Stack.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\nfun main() {\r\n\r\n}\r\ndata class Stack (val list : LinkedList<Int> = LinkedList()){\r\n//Elemente am Anfang der Liste anfügen\r\n    fun push(value : Int){\r\n        list.prepend(value)\r\n    }\r\n//Zeigt erste Elemente des Stapels\r\n    fun peek() : Int{\r\n        return list.get(0)\r\n    }\r\n    fun peek2() : Int{\r\n        return list.first()\r\n    }\r\n//Entfernt erstes Element des Stapels\r\n    fun pop() : Int{\r\n        return list.remove(0)\r\n    }\r\n    fun pop2 () : Int{\r\n        return list.removeFirst()\r\n    }\r\n//Gibt Größe des Stapels zurück\r\n    fun size() : Int{\r\n        return list.size()\r\n    }\r\n//Prüft ob Stapel leer ist\r\n    fun isEmpty() : Boolean{\r\n        return list.isEmpty()\r\n    }\r\n}*/\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/Stack.kt b/src/main/kotlin/Stack.kt
--- a/src/main/kotlin/Stack.kt	(revision ed649c91d145b42f77c5efa25aac8c7e5c3357de)
+++ b/src/main/kotlin/Stack.kt	(date 1684058082778)
@@ -1,4 +1,3 @@
-/*
 fun main() {
 
 }
@@ -29,4 +28,4 @@
     fun isEmpty() : Boolean{
         return list.isEmpty()
     }
-}*/
+}
Index: src/main/kotlin/Example_LinkedList.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Class Node which contains a value and a pointer to the next node\r\ndata class Node(val value: Int, val next: Node? = null) {\r\n    override fun toString(): String =\r\n        \"value: $value, next: ${next?.toString() ?: \"\"}\" // if next is null, return empty string\r\n}\r\n\r\n//Class LinkedList which contains a pointer to the head node\r\ndata class LinkedList(var head: Node? = null) {\r\n    fun prepend(value: Int): Unit {\r\n        head = Node(value, head)\r\n    }\r\n\r\n    // This function returns a new LinkedList containing the same elements as the input LinkedList in reverse order\r\n    fun reverse(): LinkedList {\r\n        var current = head\r\n        val reversedList = LinkedList()\r\n\r\n        while (current != null) {\r\n            reversedList.prepend(current.value)\r\n            current = current.next\r\n        }\r\n\r\n        return reversedList\r\n    }\r\n\r\n    // This function returns a new LinkedList containing the element-wise sum of two or more input LinkedLists\r\n    fun addLists(other: LinkedList): LinkedList {\r\n        // Aktueller Knoten der ersten Liste (this)\r\n        var current1 = this.head\r\n        // Aktueller Knoten der zweiten Liste (other)\r\n        var current2 = other.head\r\n        // Übertrag beim Addieren zweier Ziffern (initial auf 0 gesetzt)\r\n        var carry = 0\r\n        // Summe zweier Ziffern (noch nicht berechnet)\r\n        var sum: Int\r\n\r\n        // Neue Liste, in die das Ergebnis gespeichert wird\r\n        val resultList = LinkedList()\r\n\r\n        // Solange mindestens einer der beiden Knoten nicht null ist\r\n        while (current1 != null || current2 != null) {\r\n            // Wert der Ziffer im ersten Knoten oder 0, falls Knoten null\r\n            val value1 = current1?.value ?: 0\r\n            // Wert der Ziffer im zweiten Knoten oder 0, falls Knoten null\r\n            val value2 = current2?.value ?: 0\r\n\r\n            // Summe der beiden Ziffern und Übertrag addieren\r\n            sum = value1 + value2 + carry\r\n            // Übertrag für nächste Stelle berechnen\r\n            carry = sum / 10\r\n            // Einzelstelle des Ergebnisses berechnen\r\n            sum %= 10\r\n\r\n            // Einzelstelle als neuen Kopf der Ergebnisliste hinzufügen\r\n            resultList.prepend(sum)\r\n\r\n            // Nächste Knoten der beiden Listen betrachten\r\n            current1 = current1?.next\r\n            current2 = current2?.next\r\n        }\r\n\r\n        // Falls am Ende noch ein Übertrag vorhanden ist, diesen als neuen Kopf der Ergebnisliste hinzufügen\r\n        if (carry != 0) {\r\n            resultList.prepend(carry)\r\n        }\r\n        // Ergebnisliste zurückgeben\r\n        return resultList\r\n    }\r\n\r\n    fun addListWithReversedFunction(other: LinkedList): LinkedList {\r\n        var current1 = this.head\r\n        var current2 = other.head\r\n        var carry = 0\r\n        var sum: Int\r\n\r\n        val resultList = LinkedList()\r\n\r\n        while (current1 != null || current2 != null) {\r\n            val value1 = current1?.value ?: 0\r\n            val value2 = current2?.value ?: 0\r\n\r\n            sum = value1 + value2 + carry\r\n            carry = sum / 10\r\n            sum %= 10\r\n\r\n            resultList.prepend(sum)\r\n\r\n            current1 = current1?.next\r\n            current2 = current2?.next\r\n        }\r\n\r\n        if (carry != 0) {\r\n            resultList.prepend(carry)\r\n        }\r\n        return resultList.reverse()\r\n    }\r\n\r\n    override fun toString(): String = \"[${head?.toString() ?: \"\"}]\" // if head is null, return empty string\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/Example_LinkedList.kt b/src/main/kotlin/Example_LinkedList.kt
--- a/src/main/kotlin/Example_LinkedList.kt	(revision ed649c91d145b42f77c5efa25aac8c7e5c3357de)
+++ b/src/main/kotlin/Example_LinkedList.kt	(date 1684058111512)
@@ -1,13 +1,13 @@
 // Class Node which contains a value and a pointer to the next node
-data class Node(val value: Int, val next: Node? = null) {
+data class Node2(val value: Int, val next: Node2? = null) {
     override fun toString(): String =
         "value: $value, next: ${next?.toString() ?: ""}" // if next is null, return empty string
 }
 
 //Class LinkedList which contains a pointer to the head node
-data class LinkedList(var head: Node? = null) {
+data class LinkedList(var head: Node2? = null) {
     fun prepend(value: Int): Unit {
-        head = Node(value, head)
+        head = Node2(value, head)
     }
 
     // This function returns a new LinkedList containing the same elements as the input LinkedList in reverse order
Index: src/main/kotlin/LinkedList3.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>fun main () {\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/LinkedList3.kt b/src/main/kotlin/LinkedList3.kt
--- a/src/main/kotlin/LinkedList3.kt	(revision ed649c91d145b42f77c5efa25aac8c7e5c3357de)
+++ b/src/main/kotlin/LinkedList3.kt	(date 1684056759114)
@@ -2,3 +2,25 @@
 
 }
 
+data class LinkedListNew (var head : NodeNew? = null) {
+    fun prepend (inputValue : Int){
+        head = NodeNew(inputValue, head)
+    }
+    fun contains (searchValue : Int) : Boolean {
+        var curNode = head
+       while (curNode != null){
+           if (curNode.value == searchValue){
+               return true
+           }
+           curNode = curNode.nextNode
+       }
+    return false
+    }
+
+
+
+}
+
+data class NodeNew (val value : Int, var nextNode : NodeNew? = null) {
+
+}
\ No newline at end of file
